name: Feature branch checks
#
# Branch (Ignoring) [main]
# - Build app assets
# |-- Lint project
# |-- Check i18n string
# |-- Run Tests
#

on:
  push:
    branches:
      - '**'
      - '!main'

jobs:
  setup:
    name: Setup code and environment needed for linting, translations and tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Set up Node environment
        uses: actions/setup-node@v2
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
      - name: Install node modules if cache not present
        run: yarn install --immutable
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

  lint:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 5
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
      - name: Lint
        run: yarn lint

  test:
    runs-on: macos-latest
    needs: setup
    timeout-minutes: 20
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
      - name: Run tests with JUnit as reporter
        run: yarn test
